@tailwind base;
@tailwind components;
@tailwind utilities;

/* CSS Custom Properties - Based on palette.txt and grammar_palette.txt */
:root {
  /* Shared Palette Colors */
  --color-white: #FFFFFF;
  --color-timberwolf: #D7D8D7;
  --color-indigo: #244B6B;
  --color-nyanza: #CDDDC5;

  /* Category-Specific Accent Colors */
  --color-olivine: #ACC499;      /* Syntax - Olive green */
  --color-cadet-gray: #99A8B5;   /* Grammar - Cadet gray */

  /* Glass Container Base */
  --glass-bg: rgba(255, 255, 255, 0.65);
  --glass-border: rgba(215, 216, 215, 0.6);
  --glass-shadow: 0 8px 32px rgba(36, 75, 107, 0.15);
  --glass-blur: blur(12px);

  /* Text Colors */
  --text-primary: #244B6B;  /* Indigo dye */
  --text-secondary: #ACC499;  /* Default: Olivine for syntax */

  /* Button Colors */
  --btn-primary: #244B6B;  /* Indigo dye */
  --btn-primary-hover: #1d3c56;  /* Darker indigo */
  --btn-secondary: #ACC499;  /* Olivine */
  --btn-secondary-hover: #88aa6b;  /* Darker olivine */

  /* Default State Colors (Syntax - Olivine) */
  --hover-bg: rgba(232, 233, 232, 0.75);  /* Light Timberwolf */
  --hover-border: rgba(172, 196, 153, 0.8);  /* Olivine with opacity */
  --selected-bg: rgba(172, 196, 153, 0.75);  /* Olivine with higher opacity */
  --selected-border: rgba(172, 196, 153, 0.9);
  --selected-text: #244B6B;  /* Indigo */
  --correct-bg: rgba(205, 221, 197, 0.75);  /* Nyanza */
  --correct-border: rgba(172, 196, 153, 0.9);  /* Olivine */
  --correct-text: #244B6B;  /* Indigo */
  --wrong-bg: rgba(215, 216, 215, 0.75);  /* Timberwolf */
  --wrong-border: rgba(215, 216, 215, 0.9);
  --wrong-text: #244B6B;  /* Indigo */
}

/* Essential Component Classes */
@layer components {
  /* Category Button */
  .category-btn {
    @apply w-full cursor-pointer flex flex-col gap-1 overflow-hidden rounded-2xl border-2 border-gray-300 p-4 text-left transition-all duration-200 relative;
    background: linear-gradient(145deg, #f1f6fb, #ffffff);
  }

  .category-btn:hover {
    @apply border-primary shadow-lg;
    transform: translateY(-3px);
    box-shadow: 0 6px 20px -6px rgba(35,87,137,0.35);
  }

  .category-title {
    @apply text-xl font-semibold text-blue-800;
  }

  .category-desc {
    @apply text-sm text-blue-600;
  }

  .high-score {
    @apply text-xs text-primary font-semibold px-2 py-1 rounded-lg mt-1 inline-block;
    background: rgba(35,87,137,0.1);
  }

  /* Card 3D System */
  .card-3d {
    perspective: 1200px;
    @apply relative w-full;
    height: 100vh;
    max-height: 800px;
    min-height: 600px;
  }

  .card-3d > .card-inner {
    transform-style: preserve-3d;
    transition: transform 700ms cubic-bezier(.2,.9,.2,1);
    @apply relative w-full h-full;
  }

  .card-3d.flipped > .card-inner {
    transform: rotateY(180deg);
  }

  .card-face {
    @apply w-full h-full absolute top-0 left-0 z-[2];
    transform-origin: center center;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    will-change: transform;
    pointer-events: auto;
  }

  .answer-section {
    transform: rotateY(180deg);
  }

  /* Card Backgrounds */
  .card-background {
    width: 100%;
    height: 100%;
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
  }

  .question-bg {
    background-image: url('svg/syntax_q.svg');
  }

  .question-bg.grammar {
    background-image: url('svg/grammar_q.svg');
  }

  .answer-bg {
    background-image: url('svg/syntax_a.svg');
  }

  .answer-bg.grammar {
    background-image: url('svg/grammar_a.svg');
  }

  /* Content Areas - Precise positioning within SVG safe zones */
  .question-content {
    @apply absolute flex flex-col items-center;
    top: 40%;
    left: 10%;
    right: 10%;
    bottom: 15%;
    justify-content: space-between;
    overflow-y: auto;
    overflow-x: hidden;
  }

  .answer-content {
    @apply absolute flex flex-col items-center justify-center;
    top: 30%;
    left: 10%;
    right: 10%;
    bottom: 20%;
    overflow-y: auto;
    overflow-x: hidden;
  }

  /* Unified Glass Text Containers */
  .question-text-area,
  .answer-text-area,
  .choice-button {
    background: var(--glass-bg);
    border: 1px solid var(--glass-border);
    backdrop-filter: var(--glass-blur);
    box-shadow: var(--glass-shadow);
    color: var(--text-primary);
    font-weight: 600;
    @apply rounded-xl text-center;
  }

  .question-text-area {
    @apply p-4 mb-8;
    max-width: 320px;
    font-size: 0.95rem;
    line-height: 1.5;
  }

  .answer-text-area {
    @apply p-6;
    max-width: 360px;
  }

  .choices-area {
    @apply w-full max-w-xs space-y-2;
  }

  .choice-button {
    @apply w-full p-3 text-sm font-semibold transition-all duration-200 cursor-pointer;
    color: var(--text-blue);
    min-height: 40px;
  }

  .choice-button:hover {
    background: var(--hover-bg);
    border-color: var(--hover-border);
    transform: translateY(-1px);
  }

  .choice-button.selected {
    background: var(--selected-bg);
    border-color: var(--selected-border);
    color: var(--selected-text);
  }

  .choice-button.selected::after {
    content: '✓';
    @apply float-right font-bold text-orange-500;
  }

  .choice-button.correct {
    background: var(--correct-bg);
    border-color: var(--correct-border);
    color: var(--correct-text);
  }

  .choice-button.wrong {
    background: var(--wrong-bg);
    border-color: var(--wrong-border);
    color: var(--wrong-text);
  }

  /* Grammar Category - Cadet Gray State Colors */
  .grammar .choice-button:hover {
    background: rgba(232, 233, 232, 0.75);  /* Light Timberwolf */
    border-color: rgba(153, 168, 181, 0.8);  /* Cadet gray */
  }

  .grammar .choice-button.selected {
    background: rgba(153, 168, 181, 0.75);  /* Cadet gray */
    border-color: rgba(153, 168, 181, 0.9);
    color: #244B6B;  /* Indigo */
  }

  .grammar .choice-button.correct {
    background: rgba(205, 221, 197, 0.75);  /* Nyanza */
    border-color: rgba(153, 168, 181, 0.9);  /* Cadet gray */
    color: #244B6B;  /* Indigo */
  }

  /* Answer Display Text */
  .result-status,
  .user-choice,
  .correct-answer,
  .explanation {
    color: var(--text-primary);
    font-weight: 600;
  }

  .result-status {
    @apply text-lg mb-3;
  }

  .result-status.correct {
    @apply text-green-700;
  }

  .result-status.wrong {
    @apply text-red-700;
  }

  .user-choice {
    @apply text-sm mb-2;
  }

  .user-choice::before {
    content: "Η απάντησή σου: ";
  }

  .correct-answer {
    @apply text-sm mb-2;
  }

  .correct-answer::before {
    content: "Σωστή απάντηση: ";
  }

  .explanation {
    @apply text-sm mt-3 pt-3;
    border-top: 1px solid rgba(44,90,160,0.2);
  }

  /* Unified Button Styles */
  .btn {
    @apply px-6 py-3 rounded-xl font-semibold shadow-lg transition-all text-white;
  }

  .btn-primary {
    background: var(--btn-primary);
  }

  .btn-primary:hover {
    background: var(--btn-primary-hover);
  }

  .btn-blue {
    background: var(--btn-blue);
  }

  .btn-blue:hover {
    background: var(--btn-blue-hover);
  }

  .btn-green {
    background: var(--btn-green);
  }

  .btn-green:hover {
    background: var(--btn-green-hover);
  }

  /* Gradient Components */
  .gradient-primary {
    background: linear-gradient(135deg, var(--btn-primary), var(--btn-primary-hover));
  }

  .gradient-summary {
    background: linear-gradient(145deg, #ffffff, #f8fbff);
  }

  .gradient-gold {
    background: linear-gradient(135deg, #ffd700, #ffb300);
  }
}

/* Mobile Responsive */
@media (max-width: 768px) {
  .card-3d {
    height: 80vh;
    min-height: 500px;
    max-height: 700px;
  }

  .card-background {
    background-size: 100% 100%;
  }

  /* Adjust content areas for mobile to maintain SVG alignment */
  .question-content {
    top: 35%;
    left: 8%;
    right: 8%;
    bottom: 15%;
  }

  .answer-content {
    top: 25%;
    left: 8%;
    right: 8%;
    bottom: 20%;
  }

  .question-text-area {
    font-size: 0.85rem;
    padding: 0.75rem;
  }

  .choice-button {
    font-size: 0.8rem;
    padding: 0.6rem;
    min-height: 35px;
  }

  .category-btn {
    @apply p-4 rounded-2xl;
  }

  .category-title {
    @apply text-lg;
  }

  .category-desc {
    @apply text-xs;
  }

  .high-score {
    @apply text-xs px-1.5 py-0.5;
  }
}

/* Utilities */
@layer utilities {
  .preserve-3d {
    transform-style: preserve-3d;
  }

  .perspective-1000 {
    perspective: 1000px;
  }
}